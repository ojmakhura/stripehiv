// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 07/29/2020 11:50:18+0200.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.ub.stripehiv.user.module;

import bw.ub.stripehiv.user.module.vo.UserModuleVO;
import org.springframework.stereotype.Repository;

/**
 * @see UserModule
 */
@Repository("userModuleDao")
public class UserModuleDaoImpl
    extends UserModuleDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toUserModuleVO(
        UserModule source,
        UserModuleVO target)
    {
        // TODO verify behavior of toUserModuleVO
        super.toUserModuleVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserModuleVO toUserModuleVO(final UserModule entity)
    {
        // TODO verify behavior of toUserModuleVO
        return super.toUserModuleVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private UserModule loadUserModuleFromUserModuleVO(UserModuleVO userModuleVO)
    {
        if (userModuleVO.getId() == null)
        {
            return  UserModule.Factory.newInstance();
        }
        else
        {
            return this.load(userModuleVO.getId());
        }
    }

    /**
     * {@inheritDoc}
     */
    public UserModule userModuleVOToEntity(UserModuleVO userModuleVO)
    {
        // TODO verify behavior of userModuleVOToEntity
        UserModule entity = this.loadUserModuleFromUserModuleVO(userModuleVO);
        this.userModuleVOToEntity(userModuleVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void userModuleVOToEntity(
        UserModuleVO source,
        UserModule target,
        boolean copyIfNull)
    {
        // TODO verify behavior of userModuleVOToEntity
        super.userModuleVOToEntity(source, target, copyIfNull);
    }
}