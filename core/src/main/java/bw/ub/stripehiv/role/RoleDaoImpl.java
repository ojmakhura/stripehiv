// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 08/09/2020 10:32:33+0200.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.ub.stripehiv.role;

import bw.ub.stripehiv.role.vo.RoleVO;
import org.springframework.stereotype.Repository;

/**
 * @see Role
 */
@Repository("roleDao")
public class RoleDaoImpl
    extends RoleDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toRoleVO(
        Role source,
        RoleVO target)
    {
        // TODO verify behavior of toRoleVO
        super.toRoleVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleVO toRoleVO(final Role entity)
    {
        // TODO verify behavior of toRoleVO
        return super.toRoleVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Role loadRoleFromRoleVO(RoleVO roleVO)
    {
        // TODO implement loadRoleFromRoleVO
        throw new UnsupportedOperationException("bw.ub.stripehiv.role.loadRoleFromRoleVO(RoleVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (roleVO.getId() == null)
        {
            return  Role.Factory.newInstance();
        }
        else
        {
            return this.load(roleVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Role roleVOToEntity(RoleVO roleVO)
    {
        // TODO verify behavior of roleVOToEntity
        Role entity = this.loadRoleFromRoleVO(roleVO);
        this.roleVOToEntity(roleVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void roleVOToEntity(
        RoleVO source,
        Role target,
        boolean copyIfNull)
    {
        // TODO verify behavior of roleVOToEntity
        super.roleVOToEntity(source, target, copyIfNull);
    }
}