// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 08/01/2020 11:07:37+0200.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.ub.stripehiv.module.objective;

import bw.ub.stripehiv.module.Module;
import bw.ub.stripehiv.module.objective.vo.ObjectiveVO;
import bw.ub.stripehiv.module.vo.ModuleVO;

import org.springframework.stereotype.Repository;

/**
 * @see Objective
 */
@Repository("objectiveDao")
public class ObjectiveDaoImpl
    extends ObjectiveDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toObjectiveVO(
        Objective source,
        ObjectiveVO target)
    {
        // TODO verify behavior of toObjectiveVO
        super.toObjectiveVO(source, target);
        // WARNING! No conversion for target.module (can't convert source.getModule():bw.ub.stripehiv.module.Module to bw.ub.stripehiv.module.vo.ModuleVO
        if(source.getModule() != null) {
        	ModuleVO module = new ModuleVO();
        	module.setId(source.getModule().getId());
        	module.setCode(source.getModule().getCode());
        	module.setDescription(source.getModule().getDescription());
        	module.setModuleName(source.getModule().getModuleName());
        	
        	target.setModule(module);
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ObjectiveVO toObjectiveVO(final Objective entity)
    {
        // TODO verify behavior of toObjectiveVO
        return super.toObjectiveVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Objective loadObjectiveFromObjectiveVO(ObjectiveVO objectiveVO)
    {
        
        if (objectiveVO.getId() == null)
        {
            return  Objective.Factory.newInstance();
        }
        else
        {
            return this.load(objectiveVO.getId());
        }
        
    }

    /**
     * {@inheritDoc}
     */
    public Objective objectiveVOToEntity(ObjectiveVO objectiveVO)
    {
        // TODO verify behavior of objectiveVOToEntity
        Objective entity = this.loadObjectiveFromObjectiveVO(objectiveVO);
        this.objectiveVOToEntity(objectiveVO, entity, true);
        if(objectiveVO.getModule() != null) {
        	Module module = Module.Factory.newInstance();
        	module.setId(objectiveVO.getModule().getId());
        	module.setCode(objectiveVO.getModule().getCode());
        	module.setModuleName(objectiveVO.getModule().getModuleName());
        	
        	entity.setModule(module);
        }
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void objectiveVOToEntity(
        ObjectiveVO source,
        Objective target,
        boolean copyIfNull)
    {
        // TODO verify behavior of objectiveVOToEntity
        super.objectiveVOToEntity(source, target, copyIfNull);
    }
}