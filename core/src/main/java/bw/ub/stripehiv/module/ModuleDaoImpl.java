// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 07/27/2020 15:18:02+0200.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.ub.stripehiv.module;

import bw.ub.stripehiv.module.vo.ModuleVO;
import org.springframework.stereotype.Repository;

/**
 * @see Module
 */
@Repository("moduleDao")
public class ModuleDaoImpl
    extends ModuleDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toModuleVO(
        Module source,
        ModuleVO target)
    {
        // TODO verify behavior of toModuleVO
        super.toModuleVO(source, target);
        // WARNING! No conversion for target.nextModule (can't convert source.getNextModule():Module to ModuleVO
        // WARNING! No conversion for target.previousModule (can't convert source.getPreviousModule():Module to ModuleVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModuleVO toModuleVO(final Module entity)
    {
        // TODO verify behavior of toModuleVO
        return super.toModuleVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Module loadModuleFromModuleVO(ModuleVO moduleVO)
    {
        // TODO implement loadModuleFromModuleVO
        throw new UnsupportedOperationException("bw.ub.stripehiv.module.loadModuleFromModuleVO(ModuleVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (moduleVO.getId() == null)
        {
            return  Module.Factory.newInstance();
        }
        else
        {
            return this.load(moduleVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Module moduleVOToEntity(ModuleVO moduleVO)
    {
        // TODO verify behavior of moduleVOToEntity
        Module entity = this.loadModuleFromModuleVO(moduleVO);
        this.moduleVOToEntity(moduleVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void moduleVOToEntity(
        ModuleVO source,
        Module target,
        boolean copyIfNull)
    {
        // TODO verify behavior of moduleVOToEntity
        super.moduleVOToEntity(source, target, copyIfNull);
    }
}